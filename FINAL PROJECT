import turtle
import time


try:
    main()
except:
    print("An exception occurred")
finally:
    print("Begin Final Project")

# create a screen
screen = turtle.getscreen()

# a function to draw a rectangle and fill it with white background
screen.bgcolor("white")

# set title of screen
screen.title("Final Project: American Flag")

# set the color mode to rgb
screen.colormode(255)

#Sets a class "MyTurtle" to create the parameters for starting the project
# Turtle is a Python class of its own, so we can inherit some parameters
class MyTurtle(turtle.Turtle):
    def __init__(self, pensize, speed, shape):
        super().__init__(shape)
        self.pensize(pensize)
        self.speed(speed)
t = MyTurtle(1, 100, "turtle")

# Draws a rectangle given the length, height, and color
def draw_rectangle(length, height, color):
    t.pendown()
    t.color(color)
    t.begin_fill()
    for i in range(2):
        t.forward(length)
        t.right(90)
        t.forward(height)
        t.right(90)
    t.end_fill()
    t.penup()

# Draws a star given its size and color
def draw_star(size,color) :
    t.setheading(0)
    t.pendown()
    t.begin_fill()
    t.color(color)
    for turn in range(0,5) :
        t.forward(size)
        t.right(144)
        t.forward(size)
        t.right(144)
    t.end_fill()
    t.penup()

# Returns rgb colors from a color string, returned in the form of a dictionary 
# Raises an exception if the color is not a string
# rgb modes taken from the official Wikipedia page
def get_color(color):
    if not type(color) is str:
        raise Exception("Argument must be a string")
    colors = {'white': (255,255,255), 'black': (0,0,0), 'red': (179,25,66), 'blue': (10,49,97)}
    return colors.get(color)
    
# this function is used to create 13 red and white stripes of flag
def draw_stripes():
    flag_height = 337
    flag_length = flag_height*1.9
    stripe_height = flag_height/13
    stripe_length = flag_length
    x = -0.5*flag_length
    y = flag_height/2
    # we need to draw total 13 stripes, 7 red and 6 white
    # so we first create, 6 red and 6 white stripes alternatively
    for stripe in range(0,6):
        for color in [get_color('red'), get_color('white')]:
            t.goto(x,y)
            draw_rectangle(stripe_length, stripe_height, color)
            # decrease value of y by stripe_height
            y = y - stripe_height

    # create last red stripe
    t.goto(x,y)
    draw_rectangle(stripe_length, stripe_height, get_color('red'))
    y = y - stripe_height

# this function create navy color square
# height = 7/13 of flag_height
# width = 0.76 * flag_height
# check references section for these values
def draw_square():
    flag_height = 337
    flag_length = flag_height*1.9
    square_height = (7/13) * flag_height
    square_length = (0.76) * flag_height
    stripe_height = flag_height/13
    stripe_length = flag_length
    x = -0.5*flag_length
    y = flag_height/2
    t.goto(x,y) 
    draw_rectangle(square_length, square_height, get_color('blue'))


# A helper function to create 5 rows of 6 stars
def draw_six_stars():
    flag_height = 337
    flag_length = flag_height*1.9
    stripe_height = flag_height/13
    square_height = (7/13) * flag_height
    square_length = (0.76) * flag_height
    star_space = square_length/6.5
    line_space = square_height/5.3
    star_size = stripe_height*0.5
    y = flag_height/2
    y2 = y - line_space/2 
    x = -0.5*flag_length
    # create 5 rows of stars
    for row in range(0,5) :
        x2 = x + star_space/2
        # create 6 stars in each row
        for star in range (0,6) :
            t.goto(x2,y2)
            draw_star(star_size, get_color('white'))
            x2 = x2 + star_space
        y2 = y2 - line_space


# A helper function to create 4 rows of 5 stars
def draw_five_stars():
    flag_height = 337
    flag_length = flag_height*1.9
    stripe_height = flag_height/13
    square_height = (7/13) * flag_height
    square_length = (0.76) * flag_height
    star_space = square_length/6.5
    line_space = square_height/5.3
    star_size = stripe_height*0.5
    y = flag_height/2
    y2 = y - line_space 
    x = -0.5*flag_length
    # create 4 rows of stars
    for row in range(0,4) :
        x2 = x + star_space
        # create 5 stars in each row
        for star in range (0,5) :
            t.goto(x2,y2)
            draw_star(star_size, get_color('white'))
            x2 = x2 + star_space
        y2 = y2 - line_space
        
# Draws the flag with an outline of the stars and stripes inside
def draw_flag(height):
    flag_height = 337
    flag_length = flag_height*1.9
    draw_stripes()
    draw_square()
    draw_six_stars()
    draw_five_stars()
    x = -0.5*flag_length
    y = flag_height/2
    t.goto(x, y)
    t.pencolor(get_color('black'))
    t.pendown()
    for i in range(2):
        t.forward(flag_length)
        t.right(90)
        t.forward(height)
        t.right(90)
    t.penup()
    
# Calls the American Flag function and starts after 5 seconds.
def main():
    flag_height = 337
    time.sleep(5)
    draw_flag(flag_height)
    t.hideturtle()
    # keep holding the screen until closed manually
    screen.mainloop()
    
if __name__ == "__main__":
    main()
